/*
 
 Product is designed by MINDBITS,  trade mark registered in Mexico.
 
 
 For tecnical support:
 
 www.mindbits.com.mx
 info@mindbits.com.mx
 ventas@mindbits.com.mx
 
 All right reserved, Do not edit this file!.
 sotware product delivered and tested under standards  by pwc mexico.
 
 Warning: this product is writting in production enviroment.
 
 This is a copy of original software, administered  by an third part,  so this software its License is distributed on an "AS IS",  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. the trade mark MINDBITS is not resposable for errors or mistakes in PWC / NISSAN production enviroments. Open Sources libraries show its own conditions of distributions.
 
 */ 


#import "SEECSearchViewController.h"
#import "AFJSONUtilities.h"
#import "SEECReportesViewController.h"
#import "SEECLoginViewController.h"
#import "SEECHelpViewController.h"




@interface SEECSearchViewController ()
@end



@implementation SEECSearchViewController



@synthesize itemsSearch;



- (id)initWithStyle:(UITableViewStyle)style
{
         
    //to unable scroll
    self.tableView.scrollEnabled = YES;
    //adjust in popover
    self.contentSizeForViewInPopover = CGSizeMake(250.0, 100.0);
    //Set Title
    self.title = @"Búsqueda";
    
    
    
    self = [super initWithStyle:style];
    if (self) {
        // Custom initialization
    }
    return self;
    
}





- (void)viewDidLoad
{
     
    //self.itemsSearch = [[NSArray alloc] initWithObjects:@"Por Tipo", @"Por Palabra",@"Por Número", nil];
    self.itemsSearch = [[NSArray alloc] initWithObjects:@"Por Palabra",@"Por Número", nil];
    [super viewDidLoad];

}




- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}




- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}







- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    
    NSLog(@"numero de lementos %d", itemsSearch.count);
    
    
    return [itemsSearch count];
    
    
   
    
}



- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    
    UITableViewCell *cell = nil;
    cell = [tableView dequeueReusableCellWithIdentifier:@"Mycell"];
    
    if (cell == nil)
    {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"Mycell"];
    }
    
    cell.textLabel.text = [itemsSearch objectAtIndex:indexPath.row];
    
    return cell;
      
}



- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath {
     
    //cell.backgroundColor = [UIColor grayColor];
}




#pragma mark - Table view delegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    

    
    NSLog(@" value of  %@", [itemsSearch objectAtIndex:indexPath.row]);
    
    
    NSLog(@"what is the index  = %d", indexPath.row);
    NSLog(@"what you want   = %@", [itemsSearch objectAtIndex:indexPath.row]);
    
    
    
   
    NSArray *objKeys = [NSArray arrayWithObjects: @"label", @"id",  nil];
    
    
   NSArray *objts = [NSArray arrayWithObjects:[itemsSearch objectAtIndex:indexPath.row], [NSString stringWithFormat:@"%d", indexPath.row], nil];
   
    
    
        
    
    NSDictionary *branchDictionary = [NSDictionary dictionaryWithObjects:objts  forKeys:objKeys];
    
    
    
    [[NSNotificationCenter defaultCenter] postNotificationName:@"branchType" object:branchDictionary];
    
  
       

    
    
}



@end

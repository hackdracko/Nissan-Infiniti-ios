/*
 
 Product is designed by MINDBITS,  trade mark registered in Mexico.
 
 
 For tecnical support:
 
 www.mindbits.com.mx
 info@mindbits.com.mx
 ventas@mindbits.com.mx
 
 All right reserved, Do not edit this file!.
 sotware product delivered and tested under standards  by pwc mexico.
 
 Warning: this product is writting in production enviroment.
 
 This is a copy of original software, administered  by an third part,  so this software its License is distributed on an "AS IS",  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. the trade mark MINDBITS is not resposable for errors or mistakes in PWC / NISSAN production enviroments. Open Sources libraries show its own conditions of distributions.
 
 */ 


#import "SEECCitiesTableViewController.h"
#import "AFJSONUtilities.h"
#import "SEECSucursalesTableViewController.h"
#import "SEECUser.h"


@interface SEECCitiesTableViewController ()

@end



@implementation SEECCitiesTableViewController




- (id)initWithStyle:(UITableViewStyle)style
{
    self = [super initWithStyle:style];
     self.title = @"Ciudad";
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];

    NSURL *url = [[NSBundle mainBundle] URLForResource:@"iseec_city" withExtension:@"json"];
    NSData *cities = [NSData dataWithContentsOfURL:url];
    
    NSError *error = nil;
    
    NSDictionary *response = AFJSONDecode(cities, &error);
    
    NSPredicate *predicate = [NSPredicate predicateWithFormat:@"FK_stateId == %@", self.stateId];
    
    NSLog(@" %@", self.stateId);
    
    NSArray *selectedCities =[[[response valueForKey:@"dataroot"] valueForKey:@"seec_city"] filteredArrayUsingPredicate:predicate];
    
  //  NSLog(@"Selected Cities: %@", selectedCities);
    
    _allCities = [[NSMutableArray alloc] initWithArray:selectedCities];
    
    
    
    // Uncomment the following line to preserve selection between presentations.
    // self.clearsSelectionOnViewWillAppear = NO;
 
    // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
    // self.navigationItem.rightBarButtonItem = self.editButtonItem;
}

- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
	return (interfaceOrientation == UIInterfaceOrientationLandscapeRight);
}

#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    // Return the number of sections.
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    // Return the number of rows in the section.
    return [self.allCities count];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *CellIdentifier = @"Cell";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    
    if (cell == nil)
    {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier];
    }
    
    NSDictionary *currentObject = [self.allCities objectAtIndex:indexPath.row];
    
    cell.textLabel.text = [NSString stringWithFormat:@"%@", [currentObject valueForKey:@"cityName"]];
    // Configure the cell...
    
    return cell;
}




#pragma mark - Table view delegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    SEECSucursalesTableViewController *branchesViewController = [[SEECSucursalesTableViewController alloc] initWithStyle:UITableViewStylePlain];
    
    
       
    
    NSDictionary *currentObject = [self.allCities objectAtIndex:indexPath.row];
    
 
    //recover city named selected
    NSString *city = [NSString stringWithFormat:@"%@", [currentObject valueForKey:@"cityName"]];
    
    //Setting to global Variables city
    [[SEECUser sharedInstance] initCity: city];
    
    
    
    branchesViewController.stateId = [currentObject valueForKey:@"FK_stateId"];
    branchesViewController.cityId = [currentObject valueForKey:@"LK_cityId"];
    [self.navigationController pushViewController:branchesViewController animated:YES];
    
    [branchesViewController release];
}

-(void)dealloc
{
    [_allCities release];
    [super dealloc];
}

@end

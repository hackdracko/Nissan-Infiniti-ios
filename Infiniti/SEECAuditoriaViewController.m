/*
 
 Product is designed by MINDBITS,  trade mark registered in Mexico.
 
 
 For tecnical support:
 
 www.mindbits.com.mx
 info@mindbits.com.mx
 ventas@mindbits.com.mx
 
 All right reserved, Do not edit this file!.
 sotware product delivered and tested under standards  by pwc mexico.
 
 Warning: this product is writting in production enviroment.
 
 This is a copy of original software, administered  by an third part,  so this software its License is distributed on an "AS IS",  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. the trade mark MINDBITS is not resposable for errors or mistakes in PWC / NISSAN production enviroments. Open Sources libraries show its own conditions of distributions.
 
 */ 


#import "SEECAuditoriaViewController.h"
#import "SEECDealerInfoViewController.h"
#import "SEECSSICSIViewController.h"
#import "SEECPhaseViewController.h"
#import "SEECEvaluationViewController.h"
#import "SEECResponsibleAreaViewController.h"
#import "SEECUser.h"




@interface SEECAuditoriaViewController ()

@end

@implementation SEECAuditoriaViewController
@synthesize silverSelected;
@synthesize GoldenSelected;
@synthesize adressDealer;
@synthesize phoneDealer;
@synthesize dateDealer;
@synthesize nameDealer;
@synthesize phaseLabel;


- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    
    
    if (self) {
        // Custom initialization
    }
    return self;
}



- (void)viewDidLoad
{
    [super viewDidLoad];
    
     self.title = @"Auditoria";
    
    adressDealer.text = [[SEECUser sharedInstance]adress];
    phoneDealer.text = [[SEECUser sharedInstance] phone];
    nameDealer.text = [[SEECUser sharedInstance]bName ];
    dateDealer.text= @"";
    
    //clean values session
    [[SEECUser sharedInstance]initphaseNum:@""];
    [[SEECUser sharedInstance]initPhaseLabel:@""];
    [[SEECUser sharedInstance]initcertificationLevel:@""];
    [self.silverSelected setHidden:YES];
    [self.GoldenSelected setHidden:YES];
    
    
    
    //notication of branch is here
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(PhaseWithNotification:)
                                                 name:@"phases"
                                               object:nil];
    
    
    
    
	// Do any additional setup after loading the view.
    
    SEECPhaseViewController *phases = [[SEECPhaseViewController alloc] initWithStyle:UITableViewStylePlain];
    
    
    UINavigationController *navCtrl = [[UINavigationController alloc] initWithRootViewController:phases];
    
    
    [phases release];
    
    
    self.popOverController = [[UIPopoverController alloc] initWithContentViewController:navCtrl];
    
    [navCtrl release];
    
    
    
    [self.silverSelected setHidden:YES];
    [self.GoldenSelected setHidden:YES];
    
}



- (void)viewDidUnload
{
    [self setGoldenSelected:nil];
    [self setSilverSelected:nil];
    [self setPhaseLabel:nil];
    [self setNameDealer:nil];
    [self setDateDealer:nil];
    [self setPhoneDealer:nil];
    [self setAdressDealer:nil];
    
    
}




- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    return (interfaceOrientation == UIInterfaceOrientationLandscapeRight);
}



- (void)dealloc {
    
    [adressDealer release];
    [phoneDealer release];
    [dateDealer release];
    [nameDealer release];
    [phaseLabel release];
    [silverSelected release];
    [GoldenSelected release];
    [super dealloc];
}





- (IBAction)goEvaluation:(id)sender {

    
    
    if([[[SEECUser sharedInstance] certificationLevel] isEqualToString:@""  ]
       ||
       [[[SEECUser sharedInstance] phaseNumLabel] isEqualToString:@""  ]       
       ){
     
        [self showAlertMsg:@"Selecciona un tipo de Certificaci√≥n o Ronda"];
    
    }else{
    
    UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
    SEECEvaluationViewController *the_evaluation = [storyboard instantiateViewControllerWithIdentifier:@"SEECEvaluationViewController"];
    
    //navigation self
    [self.navigationController pushViewController:the_evaluation animated:YES];
     
     }
    
}




- (IBAction)ssicsi:(id)sender {
    
    UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
    SEECSSICSIViewController *ssicsi = [storyboard instantiateViewControllerWithIdentifier:@"SSICSIResults"];
    
    [self presentModalViewController:ssicsi animated:NO];
      
    NSLog(@"ssicsi");
        
}

- (IBAction)DataOfDealer:(id)sender {
    
    //[self performSegueWithIdentifier:@"s1" sender:sender];
    UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
    SEECDealerInfoViewController *dinfo = [storyboard instantiateViewControllerWithIdentifier:@"SEECDealerInfoViewController"];
    
    [self presentModalViewController:dinfo animated:NO];
   
     NSLog(@"data dealer");    
}



- (IBAction)SituationReport:(id)sender {
    [self showAlertMsg:@"No Disponible"];
}


- (IBAction)Responsable:(id)sender {

    //SEECResponsibleAreaViewController
    
    UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
    SEECResponsibleAreaViewController *resp = [storyboard instantiateViewControllerWithIdentifier:@"SEECResponsibleAreaViewController"];
    
    [self presentModalViewController:resp animated:NO];
    
}


- (IBAction)GoldCertification:(id)sender {
    
    //[self showAlertMsg:@"Selecciono, Certificacion Oro"];
    [[SEECUser sharedInstance]initcertificationLevel:@"Oro"];

    [self.silverSelected setHidden:YES];
    [self.GoldenSelected setHidden:NO];
}



- (IBAction)SilverCertification:(id)sender {
    
  //[self showAlertMsg:@"Selecciono, Certificacion Plata"];
  [[SEECUser sharedInstance]initcertificationLevel:@"Plata"];
    
    [self.silverSelected setHidden:NO];
    [self.GoldenSelected setHidden:YES];

}




- (IBAction)Phases:(UIButton *)sender {
 
    
    [self.popOverController  presentPopoverFromRect:sender.frame
                                              inView:self.view
                            permittedArrowDirections:UIPopoverArrowDirectionLeft
                                            animated:NO ];
    
    NSLog(@"Phase");
    
    
}




- (void)PhaseWithNotification:(NSNotification *)notification{
    
    NSDictionary *phasesIds = notification.object;
    
    NSLog(@" id  %@",  [phasesIds valueForKey:@"id"]);
    
    NSLog(@" label %@",  [phasesIds valueForKey:@"label"]);
    
    self.phaseLabel.text = [phasesIds valueForKey:@"label"];
    
    [[SEECUser sharedInstance]initphaseNum:[phasesIds valueForKey:@"id"] ];
    [[SEECUser sharedInstance]initPhaseLabel:[phasesIds valueForKey:@"label"] ];
    
    [self.popOverController dismissPopoverAnimated:YES];
    
    NSLog(@"notification phases ");
    
 }





- (void)showAlertMsg:(NSString *)msgtext{
    
	NSString *title = @"SEEC iPad";
	UIAlertView* alertView = nil;
	alertView = [[UIAlertView alloc] initWithTitle:title message:msgtext delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];
		
		[alertView show];
		if (alertView) {
			[alertView release];
		}
	
}


-(void) viewDidDisappear:(BOOL)animated{

    NSLog(@"viewDidDisappear");

}


-(void) viewDidAppear:(BOOL)animated{
    

    
}



@end

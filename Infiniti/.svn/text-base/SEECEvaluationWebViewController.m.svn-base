/*
 
 Product is designed by MINDBITS,  trade mark registered in Mexico.
 
 
 For tecnical support:
 
 www.mindbits.com.mx
 info@mindbits.com.mx
 ventas@mindbits.com.mx
 
 All right reserved, Do not edit this file!.
 sotware product delivered and tested under standards  by pwc mexico.
 
 Warning: this product is writting in production enviroment.
 
 This is a copy of original software, administered  by an third part,  so this software its License is distributed on an "AS IS",  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. the trade mark MINDBITS is not resposable for errors or mistakes in PWC / NISSAN production enviroments. Open Sources libraries show its own conditions of distributions.
 
 */ 


#import "SEECEvaluationWebViewController.h"
#import "SEECUser.h"
#import "NSArray+Persistence.h"
#import "JSONKit.h"



@interface SEECEvaluationWebViewController ()

@end

@implementation SEECEvaluationWebViewController


@synthesize evaluationsWeb;
@synthesize responseData;



- (id)initWithStyle:(UITableViewStyle)style
{
    self = [super initWithStyle:style];
    
    
    //to unable scroll
    self.tableView.scrollEnabled = YES;
    
    
    //adjust in popover
    self.contentSizeForViewInPopover = CGSizeMake(400.0, 400.0);
    
    self.title = @"Evidencias";
    if (self) {
        // Custom initialization
    }
    return self;
}





- (void)viewDidLoad
{
    
    responseData = [[NSMutableData data] retain];
    [self conectionpost];
    [super viewDidLoad];
}


- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    
}





-(void)conectionpost{
    

    
    //NSString *urlBase = @"http://201.175.46.102/wcfpwc/Replica.svc/eval2ipad";
    
    
    NSString *urlBase = @"https://seec.bestoption.com.mx/wcfpwc/Replica.svc/eval2ipad";
    
    
    NSMutableURLRequest *request =
    [[NSMutableURLRequest alloc] initWithURL:
     [NSURL URLWithString:urlBase]];
    
    [request setHTTPMethod:@"POST"];
    
    NSString *postString =[self getJsonEvidences];
    
    NSLog(@"post string %@",postString);
    
    
    [request setValue:[NSString
                       stringWithFormat:@"%d", [postString length]]
   forHTTPHeaderField:@"Content-length"];
    
    [request setHTTPBody:[postString
                          dataUsingEncoding:NSUTF8StringEncoding]];
    
    [[NSURLConnection alloc] initWithRequest:request delegate:self];
    
    
}





- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [evaluationsWeb count];
}




- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    //create a cell
    UITableViewCell *cell = [[UITableViewCell alloc]
                             initWithStyle:UITableViewCellStyleDefault
                             reuseIdentifier:@"cell"];
    
    NSDictionary *currentObject = [self.evaluationsWeb objectAtIndex:indexPath.row];
    
    
        
    cell.textLabel.text = [NSString stringWithFormat:@"%@", [currentObject valueForKey:@"evidenceFile"]];
    
    
    
    // return it
    return cell;
    
    
}



- (void)connection:(NSURLConnection *)connection didReceiveResponse:(NSURLResponse *)response {
    [responseData setLength:0];
}





- (void)connection:(NSURLConnection *)connection didReceiveData:(NSData *)data {
    [responseData appendData:data];
}





- (void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error {
    NSLog(@"Connection failed: %@", [error description]);
}





- (void)connectionDidFinishLoading:(NSURLConnection *)connection {
    [connection release];
    
    NSString *responseString = [[NSString alloc] initWithData:responseData encoding:NSUTF8StringEncoding];
    [responseData release];
    
    
    NSLog(@" responding from web evidences %@", responseString);
    
    
    //using json kit
    NSDictionary *dictionary = [responseString objectFromJSONString];
    
    //the root in json
    NSArray *response = [dictionary objectForKey:@"evidences"];
    
    evaluationsWeb = [[NSArray alloc] initWithArray:response];
    
    NSLog(@" count  %d", [evaluationsWeb count]);
   
}



- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    // Return the number of sections.
    return 1;
}




-(NSString *)getJsonEvidences{
    
    //get all samples
    NSArray *allEvidence = [NSArray arrayFromFileName:@"seec_evidenceFile.json"];
    
    //set log samples
    NSLog(@"array of evideneces %@", allEvidence);
    
    //create a query
    NSPredicate *predicate = [NSPredicate predicateWithFormat:@" branchID == %@ AND phase == %@ AND status==%@ ",[[SEECUser sharedInstance]branchId], [[SEECUser sharedInstance]phaseNum],@"0"];//27052013
    
    //filtering
    NSArray *samples = [allEvidence filteredArrayUsingPredicate:predicate];
    
    //filtres to log
    NSLog(@"array of samples %@", samples);
    
    //prepare to string
    NSMutableArray *mutableArray = [samples mutableCopy];
    
    NSString *jAnswersJSONFormat = [mutableArray JSONString];
    
    return jAnswersJSONFormat;
    
    
}



#pragma mark - Table view delegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    
   
    NSDictionary *currentObject = [self.evaluationsWeb objectAtIndex:indexPath.row];
    
    
    NSString *fileName = [NSString stringWithFormat:@"%@", [currentObject valueForKey:@"fileName"]];
    
    
    NSString *evaluationId = [NSString stringWithFormat:@"%@", [currentObject valueForKey:@"evaluationId"]];
    
 
    NSString *evidenceFile = [NSString stringWithFormat:@"%@", [currentObject valueForKey:@"evidenceFile"]];
    
    NSLog(@" fileName pop %@", fileName);
    
    
    NSLog(@" evaluationId  pop %@", evaluationId );
    
    
    
    NSArray *objKeys = [NSArray arrayWithObjects: @"fileName", @"evaluationId", @"evidenceFile",  nil];
    
        
    NSArray *branchObjects = [NSArray arrayWithObjects:fileName , evaluationId, evidenceFile, nil];
    
    
    
    NSDictionary *branchDictionary = [NSDictionary dictionaryWithObjects:branchObjects forKeys:objKeys];
    
    
    [[NSNotificationCenter defaultCenter] postNotificationName:@"evidence" object:branchDictionary];
    
    
   
    
}

@end


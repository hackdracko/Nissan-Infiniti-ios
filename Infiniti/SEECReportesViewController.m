/*
 
 Product is designed by MINDBITS,  trade mark registered in Mexico.
 
 
 For tecnical support:
 
 www.mindbits.com.mx
 info@mindbits.com.mx
 ventas@mindbits.com.mx
 
 All right reserved, Do not edit this file!.
 sotware product delivered and tested under standards  by pwc mexico.
 
 Warning: this product is writting in production enviroment.
 
 This is a copy of original software, administered  by an third part,  so this software its License is distributed on an "AS IS",  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. the trade mark MINDBITS is not resposable for errors or mistakes in PWC / NISSAN production enviroments. Open Sources libraries show its own conditions of distributions.
 
 */ 


#import "SEECReportesViewController.h"
#import "SEECLoginViewController.h"
#import "SEECStatesTableViewController.h"
#import "SEECSearchViewController.h"
#import "SEECUser.h"
#import "SEECSetSearchViewController.h"
#import "SEECUtilities.h"
#import "SEECAuditoriaViewController.h"

#import "AFJSONUtilities.h"


@interface SEECReportesViewController ()



@end

@implementation SEECReportesViewController

@synthesize searchValueForm;
@synthesize SearchLabel;
@synthesize SearchTypeGo;
@synthesize SearchByType;
@synthesize branchName;
@synthesize stateName;
@synthesize cityName;
@synthesize saleType;
@synthesize isvNumber;
@synthesize zoneName;





-(IBAction)showStatesList:(UIButton *)sender
{
    
    searchValueForm.text=@"";
    branchName.text=@"";
    stateName.text=@"";
    cityName.text=@"";
    saleType.text=@"";
    isvNumber.text=@"";
    zoneName.text=@"";
    
    
    [self.popOverControllerForBranches   presentPopoverFromRect:sender.frame
                                            inView:self.view
                          permittedArrowDirections:UIPopoverArrowDirectionLeft
                                          animated:NO ];
    
    NSLog(@"dealers by states");
     
    
}



//searc by type
- (IBAction)showSearch:(UIButton *)sender {
    
    searchValueForm.text=@"";
    branchName.text=@"";
    stateName.text=@"";
    cityName.text=@"";
    saleType.text=@"";
    isvNumber.text=@"";
    zoneName.text=@"";
    
    
    [self.popOver2Controller presentPopoverFromRect:sender.frame
                                            inView:self.view
                          permittedArrowDirections:UIPopoverArrowDirectionLeft
                                          animated:NO];
    
    
    
    
    NSLog(@"botonazo de buscar");
      
    
    
}








-(void)selectPhaseWithNotification:(NSNotification *)notification
{
        
    
    
    searchValueForm.text=@"";
    branchName.text=@"";
    stateName.text=@"";
    cityName.text=@"";
    saleType.text=@"";
    isvNumber.text=@"";
    zoneName.text=@"";
    
     
    NSLog(@"Dismiss  notification of pop to search dealer");
    
    NSDictionary *objt = notification.object;
    

    NSString *value = [objt valueForKey:@"label"];
    
    
    self.SearchLabel.text =  [@"BÃºsqueda " stringByAppendingString:value] ;
    
    //set of singlenton
    
    [[SEECUser sharedInstance] initSearchWithType:value];
    
    
    [self.popOver2Controller dismissPopoverAnimated:YES];
    
    
}




-(void)selectBranchWithNotification:(NSNotification *)notification
{
 
    
    
    searchValueForm.text=@"";
    branchName.text=@"";
    stateName.text=@"";
    cityName.text=@"";
    saleType.text=@"";
    isvNumber.text=@"";
    zoneName.text=@"";
    
    
    NSLog(@"Dismiss  notification of branch ");
    
    NSDictionary *branchDictionary = notification.object;
    
    self.branchName.text = [branchDictionary valueForKey:@"branchName"];
    
    self.stateName.text= [[SEECUser sharedInstance]stateSelected ];
    
    
    self.isvNumber.text = [branchDictionary valueForKey:@"isvNumber"];
    
    self.cityName.text = [[SEECUser sharedInstance]citySelected ];
    
    self.saleType.text = [branchDictionary valueForKey:@"saleType"];
    
    self.zoneName.text =   [self recoverInfo: @"seec_zone" : @"LK_zoneId == %@" : [branchDictionary valueForKey:@"FK_zoneId"] : @"zoneName" : @"dataroot" : @"seec_zone" ];
    
    [self.popOverControllerForBranches dismissPopoverAnimated:YES];
    
}






-(void)selectBranchSearchedWithNotification:(NSNotification *)notification {
    
    searchValueForm.text=@"";
    branchName.text=@"";
    stateName.text=@"";
    cityName.text=@"";
    saleType.text=@"";
    isvNumber.text=@"";
    zoneName.text=@"";
    
    
    NSLog(@"notification for search branches  ");
  
    
    
    
    
    NSDictionary *branchDictionary = notification.object;
    
    self.branchName.text = [branchDictionary valueForKey:@"branchName"];
    
       
    self.stateName.text=   [self recoverInfo: @"iseec_state" : @"LK_stateId == %@" : [branchDictionary valueForKey:@"FK_stateId"] : @"stateName" : @"dataroot" : @"seec_state" ];
                           
       
    //NSLog(@"  branch city   %@",  [branchDictionary valueForKey:@"FK_cityId"] );

        
    
    self.isvNumber.text = [branchDictionary valueForKey:@"isvNumber"];
    
    
    self.cityName.text =  [self recoverInfo: @"iseec_city" : @"LK_cityId == %@" : [branchDictionary valueForKey:@"FK_cityId"] : @"cityName" : @"dataroot" : @"seec_city" ];
    
    
    
    self.saleType.text = [branchDictionary valueForKey:@"saleType"];
    
    
    //self.zoneName.text = [branchDictionary valueForKey:@"FK_zoneId"];
    NSLog(@" zone %@",  [branchDictionary valueForKey:@"FK_zoneId"] );

    
     self.zoneName.text =   [self recoverInfo: @"seec_zone" : @"LK_zoneId == %@" : [branchDictionary valueForKey:@"FK_zoneId"] : @"zoneName" : @"dataroot" : @"seec_zone" ];
    
    
    [[SEECUser sharedInstance]initBranchId:[branchDictionary valueForKey:@"LK_branchId"] ];
    
        
    
    
    
     
}








- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}




- (void)viewDidLoad
{
    
    //notication of branch is here
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(selectBranchWithNotification:)
                                                 name:@"SelectBranch"
                                               object:nil];

    
    //notification of phases is here
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(selectPhaseWithNotification:)
                                                 name:@"branchType"
                                               object:nil];
    
    
    //notification of phases is here
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(selectBranchSearchedWithNotification:)
                                                 name:@"searchResult"
                                               object:nil];
    
    
    
    self.title = @"Distribuidores";
    
    
    
    //add serch
    SEECSearchViewController *types = [[SEECSearchViewController alloc] initWithStyle:UITableViewStylePlain ];
    
    
    
    
    //add for search
    UINavigationController *navControllerType = [[UINavigationController alloc] initWithRootViewController:types];
    
    
    
    
    SEECStatesTableViewController *statesTableViewController = [[SEECStatesTableViewController alloc] initWithStyle:UITableViewStylePlain];
    
      
    
    UINavigationController *navController = [[UINavigationController alloc] initWithRootViewController:statesTableViewController];
   
    
    
    
    [statesTableViewController release];
    
    //for search
    [types release];
    
    
    
    
    self.popOverControllerForBranches = [[UIPopoverController alloc] initWithContentViewController:navController];
    
    
    //add pop for serch
    self.popOver2Controller= [[UIPopoverController alloc] initWithContentViewController:navControllerType];
    
    
    
    
    [navController release];
    
    
    //to search pop
    [navControllerType release];
    
    
    
    if (NO)
    {
        
        UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
        SEECLoginViewController *loginViewController = [storyboard instantiateViewControllerWithIdentifier:@"LoginViewController"];
         
         [self presentModalViewController:loginViewController animated:NO];
         
        
    }
    
    
    //clean data of branch
    
    
    searchValueForm.text=@"";
    branchName.text=@"";
    stateName.text=@"";
    cityName.text=@"";
    saleType.text=@"";
    isvNumber.text=@"";
    zoneName.text=@"";
    
    
}
    

// Do any additional setup after loading the view.


-(void)viewDidAppear:(BOOL)animated{

    NSLog(@"show screen  ");
    
    
    
}


-(void)viewWillAppear:(BOOL)animated{


    
}




- (void)viewDidUnload
{
    
    [self setBranchName:nil];
    [self setStateName:nil];
    [self setCityName:nil];
    [self setSaleType:nil];
    [self setIsvNumber:nil];
    [self setZoneName:nil];
    [self setSearchByType:nil];
    [self setSearchTypeGo:nil];
    [self setSearchLabel:nil];
    [self setSearchValueForm:nil];
    [super viewDidUnload];
    // Release any retained subviews of the main view.
}




- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
	return (interfaceOrientation == UIInterfaceOrientationLandscapeRight);
}




- (void)dealloc
{
    [[NSNotificationCenter defaultCenter] removeObserver:self];
    
    [branchName release];
    [stateName release];
    [cityName release];
    [saleType release];
    [isvNumber release];
    [zoneName release];
    [SearchByType release];
    [SearchTypeGo release];
    [SearchLabel release];
    [searchValueForm release];
    //[DisplaySearch release];
    [super dealloc];
}







- (IBAction)goSearchByType:(id)sender{
 
    
    //setting the value on singlenton
    [[SEECUser sharedInstance] initSearchValue:searchValueForm.text];
    
    NSLog(@"what is the value of searching = %@", searchValueForm.text );
    
    
    if( [[[SEECUser sharedInstance]searchValue] isEqualToString:@""  ]
       ||
       [[[SEECUser sharedInstance]searchType] isEqualToString:@""  ]
       ){
    
        [self showAlertMsg:@"Seleccione un valor"];
    
    }else{
    
        SEECSetSearchViewController *thetypes = [[SEECSetSearchViewController alloc] initWithStyle:UITableViewStylePlain ];
        
        [SearchByType setDataSource:thetypes];
        [SearchByType setDelegate:thetypes];
        
        
        [self.view addSubview:SearchByType];
        [SearchByType reloadData];
    
    
    }
    
}







- (IBAction)goAuditevaluation:(id)sender {
    
    NSLog(@" evaluacion ");
    
    if( [ branchName.text isEqualToString:@""] ){
        
                
        [self showAlertMsg:@"Seleciona Un Distribuidor"];
        
        
    }else{
    
        UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
        SEECAuditoriaViewController *auditoria = [storyboard instantiateViewControllerWithIdentifier:@"SEECAuditoriaViewController"];
        
        //self navigation push
        [self.navigationController pushViewController:auditoria animated:YES];
    
    }
    
    
    
}



-(NSString *) recoverInfo: (NSString *) fileJson
                         : (NSString *) query
                         : (NSString *) queryValues
                         : (NSString *) objKey
                         : (NSString *) dataRoot
                         : (NSString *) setValue{
    
    NSURL *url = [[NSBundle mainBundle] URLForResource:fileJson withExtension:@"json"];
    
    NSData *data = [NSData dataWithContentsOfURL:url];
    
    NSError *error = nil;
    
    NSDictionary *response = AFJSONDecode(data, &error);
    
    NSPredicate *predicate = [NSPredicate predicateWithFormat: query,queryValues];
    
    
    NSArray *items =[[[response valueForKey:dataRoot] valueForKey:setValue] filteredArrayUsingPredicate:predicate];
    
    //NSLog(@"All items with query  *****: %@", items );
        
    NSMutableArray *ans = [NSMutableArray array];
    
    for (NSDictionary *theItem in items) {
        [ans addObject:[theItem objectForKey:objKey]];
    }
    
    //NSLog(@" %@", ans);
    
    NSString *jans = [ans componentsJoinedByString:@","];
    
    return jans;
    
}









-(void)showAlertMsg:(NSString *)msgtext{
	NSString *title = @"SEEC iPad";
    UIAlertView* alertView = nil;
    alertView = [[UIAlertView alloc] initWithTitle:title message:msgtext delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];
    [alertView show];
    [alertView release];
}





@end

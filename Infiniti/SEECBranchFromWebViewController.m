/*
 
 Product is designed by MINDBITS,  trade mark registered in Mexico.
 
 
 For tecnical support:
 
 www.mindbits.com.mx
 info@mindbits.com.mx
 ventas@mindbits.com.mx
 
 All right reserved, Do not edit this file!.
 sotware product delivered and tested under standards  by pwc mexico.
 
 Warning: this product is writting in production enviroment.
 
 This is a copy of original software, administered  by an third part,  so this software its License is distributed on an "AS IS",  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. the trade mark MINDBITS is not resposable for errors or mistakes in PWC / NISSAN production enviroments. Open Sources libraries show its own conditions of distributions.
 
 */ 



#import "SEECBranchFromWebViewController.h"
#import "SEECUser.h"



@interface SEECBranchFromWebViewController ()

@end

@implementation SEECBranchFromWebViewController


@synthesize branchesWeb;
@synthesize responseData;



- (id)initWithStyle:(UITableViewStyle)style
{
    self = [super initWithStyle:style];
    
    
    //to unable scroll
    self.tableView.scrollEnabled = YES;
    
    
    //adjust in popover
    self.contentSizeForViewInPopover = CGSizeMake(400.0, 400.0);
    
    self.title = @"Distribuidores en Web";
    if (self) {
        // Custom initialization
    }
    return self;
}





- (void)viewDidLoad
{
    
    responseData = [[NSMutableData data] retain];
    [self conectionpost];
    [super viewDidLoad];
}


- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
  
}





-(void)conectionpost{
    
    //Create String
    NSString *var1 =@"waitTime=";
    NSString *var2 =@"&cover=";
    
    NSString *wait = [var1 stringByAppendingString:@"waitTimeValue"];
    NSString *co = [var2 stringByAppendingString:@"&coverValue"];
    
    
   NSString *phase = [[SEECUser sharedInstance]phaseNum];
    
   //NSString *urlBase = @"http://201.175.46.102/wcfpwc/Replica.svc/branch/";
    NSString *urlBase = @"https://seec.bestoption.com.mx/wcfpwc/Replica.svc/branch/";
    
    
    
   NSString *urlfull = [urlBase stringByAppendingString:phase];
   
   NSLog(@"url full to get branches %@", urlfull );
    
    
    NSMutableURLRequest *request =
    [[NSMutableURLRequest alloc] initWithURL:
     [NSURL URLWithString:urlfull]];
    
    [request setHTTPMethod:@"POST"];
    
    NSString *postString = [wait stringByAppendingString:co];
    
    [request setValue:[NSString
                       stringWithFormat:@"%d", [postString length]]
   forHTTPHeaderField:@"Content-length"];
    
    [request setHTTPBody:[postString
                          dataUsingEncoding:NSUTF8StringEncoding]];
    
    [[NSURLConnection alloc] initWithRequest:request delegate:self];
    
    
}





- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [branchesWeb count];
}




- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    //create a cell
    UITableViewCell *cell = [[UITableViewCell alloc]
                             initWithStyle:UITableViewCellStyleDefault
                             reuseIdentifier:@"cell"];
    
    NSDictionary *currentObject = [self.branchesWeb objectAtIndex:indexPath.row];
    
    
    cell.textLabel.text = [NSString stringWithFormat:@"%@", [currentObject valueForKey:@"branchName"]];
    
    
    
    // return it
    return cell;
    
    
}



- (void)connection:(NSURLConnection *)connection didReceiveResponse:(NSURLResponse *)response {
    [responseData setLength:0];
}





- (void)connection:(NSURLConnection *)connection didReceiveData:(NSData *)data {
    [responseData appendData:data];
}





- (void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error {
    NSLog(@"Connection failed: %@", [error description]);
}





- (void)connectionDidFinishLoading:(NSURLConnection *)connection {
    [connection release];
    
    NSString *responseString = [[NSString alloc] initWithData:responseData encoding:NSUTF8StringEncoding];
    [responseData release];
    
    
    NSLog(@" responding from web %@", responseString);
    
    
    //using json kit
    NSDictionary *dictionary = [responseString objectFromJSONString];
    
    //the root in json
    NSArray *response = [dictionary objectForKey:@"branchs"];
    
    branchesWeb = [[NSArray alloc] initWithArray:response];
    
}



- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    // Return the number of sections.
    return 1;
}





#pragma mark - Table view delegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    
    NSDictionary *currentObject = [self.branchesWeb objectAtIndex:indexPath.row];
    
    
    NSString *branchName = [NSString stringWithFormat:@"%@", [currentObject valueForKey:@"branchName"]];
    
    
    NSString *branchId = [NSString stringWithFormat:@"%@", [currentObject valueForKey:@"branchId"]];
    
    
    NSLog(@" branchName pop %@", branchName);
    
    
    NSLog(@" branchId  pop %@", branchId );
    
    
    
    NSArray *objKeys = [NSArray arrayWithObjects: @"branchName", @"branchId",  nil];
    

    
    NSArray *branchObjects = [NSArray arrayWithObjects:branchName , branchId, nil];
    
    
    
    NSDictionary *branchDictionary = [NSDictionary dictionaryWithObjects:branchObjects forKeys:objKeys];
    
    
    [[NSNotificationCenter defaultCenter] postNotificationName:@"BranchSelectedReplica" object:branchDictionary];
    
    
     
     
}

@end

